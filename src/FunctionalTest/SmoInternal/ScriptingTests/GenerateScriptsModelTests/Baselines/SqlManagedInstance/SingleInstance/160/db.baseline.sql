/*    ==Scripting Parameters==

    Source Server Version : SQL Server 2022 ($(ServerVersion))
    Source Database Engine Edition : Microsoft Azure SQL Database Managed Instance Edition
    Source Database Engine Type : Standalone SQL Server

    Target Server Version : SQL Server 2022
    Target Database Engine Edition : Microsoft SQL Server Enterprise Edition
    Target Database Engine Type : Standalone SQL Server
*/
USE [master]
GO
/****** Object:  Database [$(BracketEscapedDatabaseName)]    $(ScriptDate) ******/
CREATE DATABASE [$(BracketEscapedDatabaseName)]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'data_0', FILENAME = N'$(data_0_FileName)' , SIZE = 32768KB , MAXSIZE = 268435456KB , FILEGROWTH = 16384KB ), 
 FILEGROUP [XTP] CONTAINS MEMORY_OPTIMIZED_DATA  DEFAULT
( NAME = N'XTP', FILENAME = N'$(XTP_FileName)' , MAXSIZE = UNLIMITED)
 LOG ON 
( NAME = N'log', FILENAME = N'$(LogFileName)' , SIZE = 8192KB , MAXSIZE = 1073741824KB , FILEGROWTH = 16384KB )
 WITH CATALOG_COLLATION = DATABASE_DEFAULT, LEDGER = OFF
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] ADD FILEGROUP [FileGroup1]
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] ADD FILEGROUP [ftfg_FullTextCatalog1]
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] ADD FILEGROUP [SmoBaselineVerification_Filegroup]
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET COMPATIBILITY_LEVEL = 150
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [$(BracketEscapedDatabaseName)].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET ARITHABORT OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET  ENABLE_BROKER 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET RECOVERY FULL 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET  MULTI_USER 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET DB_CHAINING OFF 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET DELAYED_DURABILITY = DISABLED 
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET ACCELERATED_DATABASE_RECOVERY = ON  (PERSISTENT_VERSION_STORE_FILEGROUP = [PRIMARY]) 
GO
EXEC sys.sp_db_vardecimal_storage_format N'$(SingleQuoteEscapedDatabaseName)', N'ON'
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET ENCRYPTION ON
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET QUERY_STORE = OFF
GO
USE [$(BracketEscapedDatabaseName)]
GO
/****** Object:  ApplicationRole [ApplicationRole1]    $(ScriptDate) ******/
/* To avoid disclosure of passwords, the password is generated in script. */
declare @idx as int
declare @placeholderPwd as nvarchar(64)
declare @rnd as float
select @idx = 0
select @placeholderPwd = N''
select @rnd = rand((@@CPU_BUSY % 100) + ((@@IDLE % 100) * 100) + 
       (DATEPART(ss, GETDATE()) * 10000) + ((cast(DATEPART(ms, GETDATE()) as int) % 100) * 1000000))
while @idx < 64
begin
   select @placeholderPwd = @placeholderPwd + char((cast((@rnd * 83) as int) + 43))
   select @idx = @idx + 1
select @rnd = rand()
end
declare @statement nvarchar(4000)
select @statement = N'CREATE APPLICATION ROLE [ApplicationRole1] WITH DEFAULT_SCHEMA = [dbo], ' + N'PASSWORD = N' + QUOTENAME(@placeholderPwd,'''')
EXEC dbo.sp_executesql @statement
GO
/****** Object:  User [TestUser]    $(ScriptDate) ******/
CREATE USER [TestUser] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [ServerRoleUser]    $(ScriptDate) ******/
CREATE USER [ServerRoleUser] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  DatabaseRole [Role1]    $(ScriptDate) ******/
CREATE ROLE [Role1]
GO
/****** Object:  DatabaseRole [AlterRole2]    $(ScriptDate) ******/
CREATE ROLE [AlterRole2]
GO
/****** Object:  SqlAssembly [Geometry]    $(ScriptDate) ******/
CREATE ASSEMBLY [Geometry]
FROM 
WITH PERMISSION_SET = SAFE
GO
/****** Object:  Schema [Schema1]    $(ScriptDate) ******/
CREATE SCHEMA [Schema1]
GO
/****** Object:  Schema [SmoBaselineVerification_Schema]    $(ScriptDate) ******/
CREATE SCHEMA [SmoBaselineVerification_Schema]
GO
/****** Object:  Default [BoundDefault]    $(ScriptDate) ******/
CREATE DEFAULT [dbo].[BoundDefault] 
AS
0
GO
/****** Object:  Default [Default1]    $(ScriptDate) ******/
CREATE DEFAULT [dbo].[Default1] 
AS
3;


GO
/****** Object:  FullTextCatalog [FullTextCatalog1]    $(ScriptDate) ******/
CREATE FULLTEXT CATALOG [FullTextCatalog1] WITH ACCENT_SENSITIVITY = ON
AS DEFAULT
GO
/****** Object:  FullTextCatalog [SmoBaselineVerification_FullTextCatalog]    $(ScriptDate) ******/
CREATE FULLTEXT CATALOG [SmoBaselineVerification_FullTextCatalog] WITH ACCENT_SENSITIVITY = ON
GO
/****** Object:  FullTextStopList FullTextStoplist1    $(ScriptDate) ******/
CREATE FULLTEXT STOPLIST [FullTextStoplist1]
;
GO
/****** Object:  SearchPropertyList custom_property_list    $(ScriptDate) ******/
CREATE SEARCH PROPERTY LIST [custom_property_list] ;
GO
/****** Object:  SearchProperty Author    $(ScriptDate) ******/
ALTER SEARCH PROPERTY LIST [custom_property_list]
ADD N'Author'
WITH (PROPERTY_SET_GUID = N'e45795b3-9455-11d1-aebd-0000f80fffff', PROPERTY_INT_ID = 99 , PROPERTY_DESCRIPTION = N'Author last name first name' );
GO
/****** Object:  SearchPropertyList SPL1    $(ScriptDate) ******/
CREATE SEARCH PROPERTY LIST [SPL1] ;
GO
/****** Object:  PartitionFunction [PartitionFunction]    $(ScriptDate) ******/
CREATE PARTITION FUNCTION [PartitionFunction](int) AS RANGE RIGHT FOR VALUES (1, 100, 1000)
GO
/****** Object:  PartitionFunction [PartitionFunction2X]    $(ScriptDate) ******/
CREATE PARTITION FUNCTION [PartitionFunction2X](int) AS RANGE RIGHT FOR VALUES (1, 100, 1000)
GO
/****** Object:  PartitionFunction [PartitionFunctionX]    $(ScriptDate) ******/
CREATE PARTITION FUNCTION [PartitionFunctionX](int) AS RANGE RIGHT FOR VALUES (1, 100, 1000)
GO
/****** Object:  PartitionFunction [pf6]    $(ScriptDate) ******/
CREATE PARTITION FUNCTION [pf6](datetimeoffset(2)) AS RANGE RIGHT FOR VALUES (N'11/21/2011 11:46:37 +00:00')
GO
/****** Object:  PartitionScheme [PartitionScheme]    $(ScriptDate) ******/
CREATE PARTITION SCHEME [PartitionScheme] AS PARTITION [PartitionFunction] TO ([PRIMARY], [FileGroup1], [PRIMARY], [FileGroup1])
GO
/****** Object:  Rule [Rule1]    $(ScriptDate) ******/
CREATE RULE [dbo].[Rule1] 
AS
@range >= $1000
       AND @range < $20000;


GO
/****** Object:  Rule [SmoBaselineVerification_Rule]    $(ScriptDate) ******/
CREATE RULE [dbo].[SmoBaselineVerification_Rule] 
AS
@range>= $1000 AND @range <$20000;
GO
/****** Object:  XmlSchemaCollection [dbo].[XmlSchemaCollection]    $(ScriptDate) ******/
CREATE XML SCHEMA COLLECTION [dbo].[XmlSchemaCollection] AS N'<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"><xsd:element name="root" type="xsd:string" /></xsd:schema>'
GO
/****** Object:  UserDefinedDataType [dbo].[dataType]    $(ScriptDate) ******/
CREATE TYPE [dbo].[dataType] FROM [bigint] NOT NULL
GO
/****** Object:  UserDefinedDataType [dbo].[udt_ForProc]    $(ScriptDate) ******/
CREATE TYPE [dbo].[udt_ForProc] FROM [varchar](11) NOT NULL
GO
/****** Object:  UserDefinedType [dbo].[Angle]    $(ScriptDate) ******/
CREATE TYPE [dbo].[Angle]
EXTERNAL NAME [Geometry].[Angle]
GO
USE [$(BracketEscapedDatabaseName)]
GO
/****** Object:  Sequence [dbo].[sequence1]    $(ScriptDate) ******/
CREATE SEQUENCE [dbo].[sequence1] 
 AS [bigint]
 START WITH -9223372036854775808
 INCREMENT BY 1
 MINVALUE -9223372036854775808
 MAXVALUE 9223372036854775807
 NO CACHE 
GO
USE [$(BracketEscapedDatabaseName)]
GO
/****** Object:  Sequence [dbo].[TestSequence]    $(ScriptDate) ******/
CREATE SEQUENCE [dbo].[TestSequence] 
 AS [bigint]
 START WITH 5000
 INCREMENT BY 2
 MINVALUE -9223372036854775808
 MAXVALUE 100000
 CACHE 
GO
/****** Object:  UserDefinedTableType [dbo].[SmoBaselineVerification_UserDefinedTableType]    $(ScriptDate) ******/
CREATE TYPE [dbo].[SmoBaselineVerification_UserDefinedTableType] AS TABLE(
	[c1] [int] NOT NULL DEFAULT ((5)),
	[c2] [nvarchar](50) NULL,
	[c3] [int] NOT NULL,
	[c4]  AS ([c1]+(3.0)),
	PRIMARY KEY CLUSTERED 
(
	[c1] ASC
)WITH (IGNORE_DUP_KEY = OFF),
	UNIQUE NONCLUSTERED 
(
	[c3] ASC
)WITH (IGNORE_DUP_KEY = OFF)
)
GO
/****** Object:  UserDefinedTableType [dbo].[SmoBaselineVerification_UserDefinedTableType_MultipleIndexType]    $(ScriptDate) ******/
CREATE TYPE [dbo].[SmoBaselineVerification_UserDefinedTableType_MultipleIndexType] AS TABLE(
	[c1] [int] NOT NULL,
	[c2] [int] NULL DEFAULT ((10)),
	PRIMARY KEY NONCLUSTERED 
(
	[c1] ASC
)WITH (IGNORE_DUP_KEY = OFF),
	UNIQUE CLUSTERED 
(
	[c1] ASC,
	[c2] DESC
)WITH (IGNORE_DUP_KEY = OFF),
	CHECK (([c1]>(0)))
)
GO
/****** Object:  UserDefinedTableType [dbo].[SmoBaselineVerification_UserDefinedTableType_MultipleKeysConstraintsIndexes]    $(ScriptDate) ******/
CREATE TYPE [dbo].[SmoBaselineVerification_UserDefinedTableType_MultipleKeysConstraintsIndexes] AS TABLE(
	[EmpID] [int] NOT NULL,
	[col1] [int] NULL DEFAULT ((0)),
	[EmpName] [char](1) NOT NULL,
	[EmpEmail] [nvarchar](100) NULL DEFAULT ('name@domain.com'),
	[c4]  AS ([EmpID]+(2)),
	PRIMARY KEY CLUSTERED 
(
	[EmpID] ASC
)WITH (IGNORE_DUP_KEY = OFF),
	UNIQUE NONCLUSTERED 
(
	[EmpName] ASC
)WITH (IGNORE_DUP_KEY = OFF),
	CHECK (([EmpName]<>'Bill Gates')),
	CHECK (([EmpName]<>'Steve Balmer'))
)
GO
/****** Object:  UserDefinedTableType [dbo].[UserDefinedTableType1]    $(ScriptDate) ******/
CREATE TYPE [dbo].[UserDefinedTableType1] AS TABLE(
	[c1] [int] NOT NULL,
	[c2] [nvarchar](50) NULL,
	[c3] [xml] NULL,
	PRIMARY KEY CLUSTERED 
(
	[c1] ASC
)WITH (IGNORE_DUP_KEY = OFF)
)
GO
/****** Object:  UserDefinedAggregate [dbo].[Concat]    $(ScriptDate) ******/
CREATE AGGREGATE [dbo].[Concat]
(@nextval [nvarchar](4000))
RETURNS[nvarchar](4000)
EXTERNAL NAME [Geometry].[Concat]
GO
/****** Object:  Synonym [dbo].[Synonym_1]    $(ScriptDate) ******/
CREATE SYNONYM [dbo].[Synonym_1] FOR [dbo].[View_1]
GO
/****** Object:  UserDefinedFunction [dbo].[ScalarFunction1]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[ScalarFunction1] 
(
    -- Add the parameters for the function here
    @p1 int, @p2 int
)
RETURNS int
AS
BEGIN
    -- Declare the return variable here
    DECLARE @Result int

    -- Add the T-SQL statements to compute the return value here
    SET @Result = @p1 * @p2 + 2

    -- Return the result of the function
    RETURN @Result

END


GO
/****** Object:  UserDefinedFunction [dbo].[SmoBaselineVerification_CLRTableValueFunctionWithOrderColumn]    $(ScriptDate) ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE FUNCTION [dbo].[SmoBaselineVerification_CLRTableValueFunctionWithOrderColumn](@recordCount [int])
RETURNS  TABLE (
	[au_id] [nvarchar](11) NULL,
	[au_lname] [nvarchar](40) NULL,
	[au_fname] [nvarchar](20) NULL
) WITH EXECUTE AS CALLER
AS 
EXTERNAL NAME [Geometry].[UserDefinedFunctions].[CLRTableValueFunction]
GO
/****** Object:  UserDefinedFunction [dbo].[SmoBaselineVerification_TsqlFunction]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--==========================
--= TSQL FUNCTION =
--==========================

CREATE FUNCTION [dbo].[SmoBaselineVerification_TsqlFunction](@recordCount [int])
RETURNS  INT
AS 
BEGIN
    return (1);
END
GO
/****** Object:  UserDefinedFunction [dbo].[TableFunctionWithComputedColumns]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[TableFunctionWithComputedColumns]
(
    -- Add the parameters for the function here
    @p1 int = 2,
    @p2 nchar(10) = NUll
)
RETURNS
@Table_Var TABLE
(
    -- Add the column definitions for the TABLE variable here
    c1 int,
    c2 nchar(10),
    c3 AS 1 * 3
)
AS
BEGIN
    -- Fill the table variable with the rows for your result set
    INSERT INTO @Table_Var
    SELECT a.column_1, a.column_2
    FROM Table_1 a
    WHERE a.column_1 > 5

    INSERT INTO @Table_Var
    SELECT column_1, 'From 2'
    FROM Table_2
    WHERE @p1 > column_1

    RETURN
END
GO
/****** Object:  ColumnMasterKey [SmoBaselineVerification_ColumnMasterKey]    $(ScriptDate) ******/
CREATE COLUMN MASTER KEY [SmoBaselineVerification_ColumnMasterKey]
WITH
(
	KEY_STORE_PROVIDER_NAME = N'MSSQL_CERTIFICATE_STORE',
	KEY_PATH = N'Current User/Personal/f2260f28d909d21c642a3d8e0b45a830e79a1420'
)
GO
/****** Object:  ColumnEncryptionKey [SmoBaselineVerification_ColumnEncryptionKey]    $(ScriptDate) ******/
CREATE COLUMN ENCRYPTION KEY [SmoBaselineVerification_ColumnEncryptionKey]
WITH VALUES
(
	COLUMN_MASTER_KEY = [SmoBaselineVerification_ColumnMasterKey],
	ALGORITHM = 'RSA_OAEP',
	ENCRYPTED_VALUE = 0x01700000016C006F00630061006C006D0061006300680069006E0065002F006D0079002F003200660061006600640038003100320031003400340034006500620031006100320065003000360039003300340038006100350064003400300032003300380065006600620063006300610031006300284FC4316518CF3328A6D9304F65DD2CE387B79D95D077B4156E9ED8683FC0E09FA848275C685373228762B02DF2522AFF6D661782607B4A2275F2F922A5324B392C9D498E4ECFC61B79F0553EE8FB2E5A8635C4DBC0224D5A7F1B136C182DCDE32A00451F1A7AC6B4492067FD0FAC7D3D6F4AB7FC0E86614455DBB2AB37013E0A5B8B5089B180CA36D8B06CDB15E95A7D06E25AACB645D42C85B0B7EA2962BD3080B9A7CDB805C6279FE7DD6941E7EA4C2139E0D4101D8D7891076E70D433A214E82D9030CF1F40C503103075DEEB3D64537D15D244F503C2750CF940B71967F51095BFA51A85D2F764C78704CAB6F015EA87753355367C5C9F66E465C0C66BADEDFDF76FB7E5C21A0D89A2FCCA8595471F8918B1387E055FA0B816E74201CD5C50129D29C015895CD073925B6EA87CAF4A4FAF018C06A3856F5DFB724F42807543F777D82B809232B465D983E6F19DFB572BEA7B61C50154605452A891190FB5A0C4E464862CF5EFAD5E7D91F7D65AA1A78F688E69A1EB098AB42E95C674E234173CD7E0925541AD5AE7CED9A3D12FDFE6EB8EA4F8AAD2629D4F5A18BA3DDCC9CF7F352A892D4BEBDC4A1303F9C683DACD51A237E34B045EBE579A381E26B40DCFBF49EFFA6F65D17F37C6DBA54AA99A65D5573D4EB5BA038E024910A4D36B79A1D4E3C70349DADFF08FD8B4DEE77FDB57F01CB276ED5E676F1EC973154F86
)
GO
/****** Object:  Table [dbo].[Table_1]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Table_1](
	[column_1] [int] NOT NULL,
	[column_2] [nchar](10) NULL,
	[column_3]  AS ([column_1]*(2)),
	[column_4] [numeric](18, 0) NULL,
 CONSTRAINT [PK_Table_1] PRIMARY KEY CLUSTERED 
(
	[column_1] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[View_1]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[View_1]
AS
SELECT     column_1, column_2, column_3, column_4
FROM         dbo.Table_1
GO
/****** Object:  Table [dbo].[Table_2]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Table_2](
	[column_1] [int] NOT NULL,
	[column_2] [nvarchar](50) NOT NULL,
	[column_3] [xml] NOT NULL,
 CONSTRAINT [PK_Table_2] PRIMARY KEY CLUSTERED 
(
	[column_1] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [FileGroup1],
 CONSTRAINT [UniqueConstraint] UNIQUE NONCLUSTERED 
(
	[column_2] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [FileGroup1]
) ON [FileGroup1] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  UserDefinedFunction [dbo].[InlineFunction_1]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[InlineFunction_1]
(	
    -- Add the parameters for the function here
    @param1 int
)
RETURNS TABLE 
AS
RETURN 
(
    -- Add the SELECT statement with parameter references here
    SELECT a.column_1, b.column_2 
    FROM Table_1 a 
    INNER JOIN Table_2 b
    ON a.column_1 = b.column_1
    WHERE a.column_4 > @param1
)
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_TemporalLedgerTable]    $(ScriptDate) ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_TemporalLedgerTable](
	[c1] [int] NOT NULL,
	[ValidFrom] [datetime2](7) GENERATED ALWAYS AS ROW START NOT NULL,
	[ValidTo] [datetime2](7) GENERATED ALWAYS AS ROW END NOT NULL,
	[ledger_start_transaction_id] [bigint] GENERATED ALWAYS AS transaction_id START HIDDEN NOT NULL,
	[ledger_end_transaction_id] [bigint] GENERATED ALWAYS AS transaction_id END HIDDEN NULL,
	[ledger_start_sequence_number] [bigint] GENERATED ALWAYS AS sequence_number START HIDDEN NOT NULL,
	[ledger_end_sequence_number] [bigint] GENERATED ALWAYS AS sequence_number END HIDDEN NULL,
PRIMARY KEY CLUSTERED 
(
	[c1] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
	PERIOD FOR SYSTEM_TIME ([ValidFrom], [ValidTo])
) ON [PRIMARY]
WITH
(
SYSTEM_VERSIONING = ON (HISTORY_TABLE = [dbo].[SmoBaselineVerification_HistoryTable_TemporalLedgerTable]), 
LEDGER = ON (LEDGER_VIEW = [dbo].[SmoBaselineVerification_CustomTemporalLedgerView] (TRANSACTION_ID_COLUMN_NAME = [CustomLedgerViewTransactionIdColumnName], SEQUENCE_NUMBER_COLUMN_NAME = [CustomLedgerViewSequenceNumberColumnName], OPERATION_TYPE_COLUMN_NAME = [CustomLedgerViewOperationTypeColumnName], OPERATION_TYPE_DESC_COLUMN_NAME = [CustomLedgerViewOperationTypeDescColumnName]))
)
GO
/****** Object:  View [dbo].[View_2]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[View_2] (c1)
AS
SELECT     column_1 as c1
FROM         dbo.Table_1

GO
/****** Object:  UserDefinedFunction [dbo].[SmoBaselineVerification_fn_NativeSecurityPredicate]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[SmoBaselineVerification_fn_NativeSecurityPredicate] (@x INT) RETURNS TABLE WITH SCHEMABINDING, NATIVE_COMPILATION AS
return select 1 as is_visible
GO
/****** Object:  UserDefinedFunction [dbo].[SmoBaselineVerification_fn_SecurityPredicate]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--======================
--= SECURITY PREDICATE =
--======================

CREATE FUNCTION [dbo].[SmoBaselineVerification_fn_SecurityPredicate] (@x INT) RETURNS TABLE WITH SCHEMABINDING AS
return select 1 as is_visible
GO
/****** Object:  View [dbo].[SmoBaselineVerification_View]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--========
--= VIEW =
--========

CREATE VIEW [dbo].[SmoBaselineVerification_View] (c1)
AS
SELECT 1
FROM sys.tables
GO
/****** Object:  Table [dbo].[[]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[[](
	[c1] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[]]]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[]]](
	[c1] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[asdf'[]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[asdf'[](
	[c1] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Different_WithAppend_Table]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Different_WithAppend_Table](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Col] [char](1) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Documents]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Documents](
	[column_1] [xml] NULL,
	[column_2] [varbinary](max) NULL,
	[column_3] [nvarchar](90) NOT NULL,
	[column_4] [varchar](20) NULL,
	[column_5] [xml] NULL,
PRIMARY KEY CLUSTERED 
(
	[column_3] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[KatmaiDataTypes]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[KatmaiDataTypes](
	[ordID] [int] IDENTITY(1,1) NOT NULL,
	[ordDate] [datetime] NULL,
	[ordTakenDate] [date] NULL,
	[ordTakenTime] [time](5) NULL,
	[ordShipDate] [datetime2](7) NULL,
	[ordCustOrdDate] [datetimeoffset](7) NULL,
	[ordLastUpdate] [smalldatetime] NULL,
	[geoColumn] [geometry] NULL,
 CONSTRAINT [PK_KatmaiDataTypes] PRIMARY KEY CLUSTERED 
(
	[ordID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[QueryPagingTable]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[QueryPagingTable](
	[ID] [int] NOT NULL,
	[Query] [nvarchar](25) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[referenced_table]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[referenced_table](
	[C1] [int] NULL,
	[C2] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_AlwaysEncryptedTable]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_AlwaysEncryptedTable](
	[plaintext] [int] NULL,
	[deterministic] [int] ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = [SmoBaselineVerification_ColumnEncryptionKey], ENCRYPTION_TYPE = Deterministic, ALGORITHM = 'AEAD_AES_256_CBC_HMAC_SHA_256') NULL,
	[randomized] [int] ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = [SmoBaselineVerification_ColumnEncryptionKey], ENCRYPTION_TYPE = Randomized, ALGORITHM = 'AEAD_AES_256_CBC_HMAC_SHA_256') NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_AppendOnlyLedgerTable]    $(ScriptDate) ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_AppendOnlyLedgerTable](
	[c1] [int] NULL,
	[ledger_start_transaction_id] [bigint] GENERATED ALWAYS AS transaction_id START HIDDEN NOT NULL,
	[ledger_start_sequence_number] [bigint] GENERATED ALWAYS AS sequence_number START HIDDEN NOT NULL
) ON [PRIMARY]
WITH
(
LEDGER = ON (APPEND_ONLY = ON, LEDGER_VIEW = [dbo].[SmoBaselineVerification_CustomAppendOnlyLedgerView] (TRANSACTION_ID_COLUMN_NAME = [CustomLedgerViewTransactionIdColumnName], SEQUENCE_NUMBER_COLUMN_NAME = [CustomLedgerViewSequenceNumberColumnName], OPERATION_TYPE_COLUMN_NAME = [CustomLedgerViewOperationTypeColumnName], OPERATION_TYPE_DESC_COLUMN_NAME = [CustomLedgerViewOperationTypeDescColumnName]))
)
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_CompressedTable]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_CompressedTable](
	[c1] [int] NOT NULL,
	[c2] [int] NULL,
 CONSTRAINT [SmoBaselineVerification_CompressedTable_pk1] PRIMARY KEY NONCLUSTERED 
(
	[c1] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Index [SmoBaselineVerification_CompressedIndex]    $(ScriptDate) ******/
CREATE UNIQUE CLUSTERED INDEX [SmoBaselineVerification_CompressedIndex] ON [dbo].[SmoBaselineVerification_CompressedTable]
(
	[c1] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_CompressedTableForCCI]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_CompressedTableForCCI](
	[c1] [int] NOT NULL,
	[c2] [int] NULL,
 CONSTRAINT [SmoBaselineVerification_CompressedTableForCCI_pk1] PRIMARY KEY NONCLUSTERED 
(
	[c1] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_DataClassifiedTable]    $(ScriptDate) ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_DataClassifiedTable](
	[SmoBaselineVerification_DataClassifiedColumn] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_DataMaskedTable]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_DataMaskedTable](
	[SmoBaselineVerification_DataMaskedColumn] [int] MASKED WITH (FUNCTION = 'default()') NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_DefaultConstraintTable]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_DefaultConstraintTable](
	[c1] [int] NOT NULL,
	[c2] [int] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_TableForForeignKey]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_TableForForeignKey](
	[c1] [int] NOT NULL,
 CONSTRAINT [PK_SmoBaselineVerification_TableForForeignKey] PRIMARY KEY CLUSTERED 
(
	[c1] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_TableWithForeignKey]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_TableWithForeignKey](
	[c1] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_TableWithIndex]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_TableWithIndex](
	[c1] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_TableWithStatistics]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_TableWithStatistics](
	[c1] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SmoBaselineVerification_UpdatableLedgerTable]    $(ScriptDate) ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmoBaselineVerification_UpdatableLedgerTable](
	[c1] [int] NULL,
	[ledger_start_transaction_id] [bigint] GENERATED ALWAYS AS transaction_id START HIDDEN NOT NULL,
	[ledger_end_transaction_id] [bigint] GENERATED ALWAYS AS transaction_id END HIDDEN NULL,
	[ledger_start_sequence_number] [bigint] GENERATED ALWAYS AS sequence_number START HIDDEN NOT NULL,
	[ledger_end_sequence_number] [bigint] GENERATED ALWAYS AS sequence_number END HIDDEN NULL
) ON [PRIMARY]
WITH
(
SYSTEM_VERSIONING = ON (HISTORY_TABLE = [dbo].[SmoBaselineVerification_HistoryTable_UpdatableLedgerTable]), 
LEDGER = ON (LEDGER_VIEW = [dbo].[SmoBaselineVerification_CustomUpdatableLedgerView] (TRANSACTION_ID_COLUMN_NAME = [CustomLedgerViewTransactionIdColumnName], SEQUENCE_NUMBER_COLUMN_NAME = [CustomLedgerViewSequenceNumberColumnName], OPERATION_TYPE_COLUMN_NAME = [CustomLedgerViewOperationTypeColumnName], OPERATION_TYPE_DESC_COLUMN_NAME = [CustomLedgerViewOperationTypeDescColumnName]))
)
GO
/****** Object:  Table [dbo].[SpatialTable]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SpatialTable](
	[ID] [int] NOT NULL,
	[GeometryDT] [geometry] NULL,
	[GeographyDT] [geography] NULL,
	[FloatDT] [float] NULL,
	[NumericDT] [numeric](18, 0) NULL,
PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Table_3]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Table_3](
	[c1] [int] NULL,
	[c2] [int] NULL
) ON [PartitionScheme]([c1])
GO
/****** Object:  Table [dbo].[TableWithSelectiveXmlIndex]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TableWithSelectiveXmlIndex](
	[c1] [int] NOT NULL,
	[xmlCol] [xml] NULL,
PRIMARY KEY CLUSTERED 
(
	[c1] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tableWithTimestamp]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tableWithTimestamp](
	[c1] [timestamp] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TestRethrow]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TestRethrow](
	[ID] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TestSequenceTable]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TestSequenceTable](
	[Id] [int] NOT NULL,
	[Name] [varchar](25) NOT NULL,
	[MSFTColumn] [varchar](25) NOT NULL,
	[Price] [int] NOT NULL,
	[OrderDate] [datetime] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[噂構申表5]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[噂構申表5](
	[c1] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  SecurityPolicy [dbo].[SmoBaselineVerification_SecurityPolicy]    $(ScriptDate) ******/
CREATE SECURITY POLICY [dbo].[SmoBaselineVerification_SecurityPolicy] 
ADD FILTER PREDICATE [dbo].[SmoBaselineVerification_fn_SecurityPredicate]([column_1]) ON [dbo].[Table_1],
ADD BLOCK PREDICATE [dbo].[SmoBaselineVerification_fn_SecurityPredicate]([column_1]) ON [dbo].[Table_1] AFTER INSERT,
ADD BLOCK PREDICATE [dbo].[SmoBaselineVerification_fn_SecurityPredicate]([column_1]) ON [dbo].[Table_1] AFTER UPDATE,
ADD BLOCK PREDICATE [dbo].[SmoBaselineVerification_fn_NativeSecurityPredicate]([column_1]) ON [dbo].[Table_1] BEFORE UPDATE,
ADD BLOCK PREDICATE [dbo].[SmoBaselineVerification_fn_NativeSecurityPredicate]([column_1]) ON [dbo].[Table_1] BEFORE DELETE
WITH (STATE = ON, SCHEMABINDING = ON)
GO
/****** Object:  SecurityPolicy [dbo].[SmoBaselineVerification_SecurityPolicyNonSchemabound]    $(ScriptDate) ******/
CREATE SECURITY POLICY [dbo].[SmoBaselineVerification_SecurityPolicyNonSchemabound] 
ADD FILTER PREDICATE [dbo].[SmoBaselineVerification_fn_SecurityPredicate]([column_1]) ON [dbo].[Table_1],
ADD BLOCK PREDICATE [SmoBaselineVerification_fn_SecurityPredicate]([column_1]) ON [dbo].[Table_1] AFTER INSERT,
ADD BLOCK PREDICATE [SmoBaselineVerification_fn_SecurityPredicate]([column_1]) ON [dbo].[Table_1] AFTER UPDATE,
ADD BLOCK PREDICATE [dbo].[SmoBaselineVerification_fn_NativeSecurityPredicate]([column_1]) ON [dbo].[Table_1] BEFORE UPDATE,
ADD BLOCK PREDICATE [SmoBaselineVerification_fn_NativeSecurityPredicate]([column_1]) ON [dbo].[Table_1] BEFORE DELETE
WITH (STATE = OFF, SCHEMABINDING = OFF)
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [INDEX1]    $(ScriptDate) ******/
CREATE UNIQUE NONCLUSTERED INDEX [INDEX1] ON [dbo].[Documents]
(
	[column_3] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [SmoBaselineVerification_Index]    $(ScriptDate) ******/
CREATE NONCLUSTERED INDEX [SmoBaselineVerification_Index] ON [dbo].[SmoBaselineVerification_TableWithIndex]
(
	[c1] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [Index_1]    $(ScriptDate) ******/
CREATE NONCLUSTERED INDEX [Index_1] ON [dbo].[Table_1]
(
	[column_4] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [SmoBaselineVerification_CompressedColumnstoreIndexWithCompressionDelay]    $(ScriptDate) ******/
CREATE CLUSTERED COLUMNSTORE INDEX [SmoBaselineVerification_CompressedColumnstoreIndexWithCompressionDelay] ON [dbo].[SmoBaselineVerification_CompressedTableForCCI] WITH (DROP_EXISTING = OFF, COMPRESSION_DELAY = 0) ON [PRIMARY]
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
GO
/****** Object:  Index [SXI_Index]    $(ScriptDate) ******/
CREATE SELECTIVE XML INDEX [SXI_Index] ON [dbo].[TableWithSelectiveXmlIndex]
(
	[xmlCol]
)
WITH XMLNAMESPACES
(
'www.w3.org' as xmlnmsps1,
'onlinebookstore' as xmlnmsps2
)

FOR
(
[nodePath0] = '/book/title/text()', 
[nodePath1] = '/book/id1' as XQUERY 'xs:string' MAXLENGTH (10), 
[nodePath2] = '/book/id2' as XQUERY 'node()' SINGLETON, 
[nodePath3] = '/book/price' as SQL [float], 
[SmoBaselineVerification_IndexedXmlPath] = '/book/name' as SQL [nvarchar](30)
)
WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = OFF, ALLOW_PAGE_LOCKS = OFF)
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
GO
/****** Object:  Index [SSXI_Index]    $(ScriptDate) ******/
CREATE XML INDEX [SSXI_Index] ON [dbo].[TableWithSelectiveXmlIndex]
(
	[xmlCol]
)USING XML INDEX [SXI_Index] FOR (
[nodePath3]
) 
WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO
ALTER TABLE [dbo].[SmoBaselineVerification_DefaultConstraintTable] ADD  CONSTRAINT [SmoBaselineVerification_Default]  DEFAULT ('') FOR [c1]
GO
ALTER TABLE [dbo].[Table_1] ADD  CONSTRAINT [DF_Table_1_column_4]  DEFAULT ((5)) FOR [column_4]
GO
ALTER TABLE [dbo].[TestSequenceTable] ADD  DEFAULT (NEXT VALUE FOR [dbo].[TestSequence]) FOR [Id]
GO
ALTER TABLE [dbo].[TestSequenceTable] ADD  DEFAULT (N'MSFT_'+CONVERT([nvarchar](20),NEXT VALUE FOR [dbo].[TestSequence],(0))) FOR [MSFTColumn]
GO
ALTER TABLE [dbo].[SmoBaselineVerification_TableWithForeignKey]  WITH CHECK ADD  CONSTRAINT [SmoBaselineVerification_ForeignKey] FOREIGN KEY([c1])
REFERENCES [dbo].[SmoBaselineVerification_TableForForeignKey] ([c1])
GO
ALTER TABLE [dbo].[SmoBaselineVerification_TableWithForeignKey] CHECK CONSTRAINT [SmoBaselineVerification_ForeignKey]
GO
ALTER TABLE [dbo].[Table_1]  WITH CHECK ADD  CONSTRAINT [FK_Table_1_Table_2] FOREIGN KEY([column_1])
REFERENCES [dbo].[Table_2] ([column_1])
GO
ALTER TABLE [dbo].[Table_1] CHECK CONSTRAINT [FK_Table_1_Table_2]
GO
ALTER TABLE [dbo].[Table_1]  WITH CHECK ADD  CONSTRAINT [SmoBaselineVerification_Check] CHECK  (([column_1]>(0)))
GO
ALTER TABLE [dbo].[Table_1] CHECK CONSTRAINT [SmoBaselineVerification_Check]
GO
ALTER TABLE [dbo].[Table_2]  WITH CHECK ADD  CONSTRAINT [CK_Table_2] CHECK  (([column_1]>(0)))
GO
ALTER TABLE [dbo].[Table_2] CHECK CONSTRAINT [CK_Table_2]
GO
/****** Object:  StoredProcedure [dbo].[CasingOnDefaultValue]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Casing of NULL is explicit 'NUll'
CREATE PROC [dbo].[CasingOnDefaultValue] @param1 int = NUll, @param2 nvarchar(123) = N'abc'
AS
BEGIN
  select 1 as a
END
GO
/****** Object:  StoredProcedure [dbo].[FullMetaDataDiscoveryForResultSetsProcedure]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[FullMetaDataDiscoveryForResultSetsProcedure] 
AS
BEGIN
    EXEC dbo.GetTable1Table2JoinDataProcedure
    WITH RESULT SETS
    (([Table1 Column1] int NOT NULL,
    [Table1 Column2] nchar(10) NULL,
    [Table2 Column2] nvarchar(50) NOT NULL,
    [Table2 Column_3] XML NOT NULL));
END


GO
/****** Object:  StoredProcedure [dbo].[GetTable1Table2JoinDataProcedure]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GetTable1Table2JoinDataProcedure]
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;

    -- Insert statements for procedure here
    SELECT a.column_1, a.column_2, b.column_2, b.column_3 FROM dbo.Table_1 a INNER JOIN dbo.Table_2 b ON a.column_1 = b.column_1
END


GO
/****** Object:  StoredProcedure [dbo].[Procedure1]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Procedure1] 
    -- Add the parameters for the stored procedure here
    @p1 int = 0 
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;

    -- Insert statements for procedure here
    DELETE FROM table_1 WHERE column_1 < 0
END


GO
/****** Object:  StoredProcedure [dbo].[ProcedureWithUDTT]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ProcedureWithUDTT](@tableType UserDefinedTableType1 READONLY)
AS
BEGIN
  INSERT INTO dbo.Table_2
  SELECT c1, c2, c3 FROM @tableType
END


GO
/****** Object:  StoredProcedure [dbo].[QueryPagingProcedure]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[QueryPagingProcedure]
AS
BEGIN	
    SET NOCOUNT ON;
  
    SELECT * FROM QueryPagingTable 
    ORDER BY ID 
    OFFSET 0 ROWS 
    FETCH NEXT 100 ROWS ONLY;

    WITH a AS ( 
    SELECT TOP(10) * FROM QueryPagingTable 
    ORDER BY ID 
    )
    SELECT * FROM a 
    ORDER BY ID 
    OFFSET 10 ROWS;

    DECLARE @Offset INT;
    DECLARE @Fetch INT;
    DECLARE @StartRowNumber INT;
    DECLARE @EndRowNumber INT;

    SELECT * FROM QueryPagingTable ORDER BY ID OFFSET @Offset ROWS FETCH NEXT @Fetch ROWS ONLY;
    SELECT * FROM QueryPagingTable ORDER BY ID OFFSET @StartRowNumber-1 ROWS FETCH NEXT @EndRowNumber-@StartRowNumber+1 ROWS ONLY;
    SELECT * FROM QueryPagingTable ORDER BY ID OFFSET @Offset ROWS FETCH NEXT (SELECT s.column_1 FROM Table_1 AS s) ROWS ONLY; 
    SELECT * FROM QueryPagingTable ORDER BY ID OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY;
END


GO
/****** Object:  StoredProcedure [dbo].[SendProcedure]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SendProcedure]	
AS
BEGIN
    DECLARE @dialog_handle1 UNIQUEIDENTIFIER,
        @dialog_handle2 UNIQUEIDENTIFIER,
        @dialog_handle3 UNIQUEIDENTIFIER,
        @OrderMsg XML ;

SET @OrderMsg = 'expense message' ;

BEGIN DIALOG @dialog_handle1
FROM SERVICE [//Adventure-Works.com/Expenses]
TO SERVICE '//TargetDB1/TargetService'
ON CONTRACT [//Adventure-Works.com/Expenses/ExpenseSubmission] ;

BEGIN DIALOG @dialog_handle2
FROM SERVICE [//Adventure-Works.com/Expenses]
TO SERVICE '//TargetDB2/TargetService'
ON CONTRACT [//Adventure-Works.com/Expenses/ExpenseSubmission] ;

BEGIN DIALOG @dialog_handle3
FROM SERVICE [//Adventure-Works.com/Expenses]
TO SERVICE '//TargetDB3/TargetService'
ON CONTRACT [//Adventure-Works.com/Expenses/ExpenseSubmission] ;

SEND ON CONVERSATION (@dialog_handle1, @dialog_handle2, @dialog_handle3)
    MESSAGE TYPE [//Adventure-Works.com/Expenses/SubmitExpense]
    (@OrderMsg) ;

END


GO
/****** Object:  StoredProcedure [dbo].[SmoBaselineVerification_NumberedStoredProcedure]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SmoBaselineVerification_NumberedStoredProcedure]
@param int
AS
BEGIN
    SELECT * FROM sys.tables
END
GO
/****** Object:  NumberedStoredProcedure [dbo].[SmoBaselineVerification_NumberedStoredProcedure];2    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SmoBaselineVerification_NumberedStoredProcedure];2
@param int
AS
BEGIN
    SELECT * FROM sys.tables
END
GO
/****** Object:  StoredProcedure [dbo].[SpatialIndexProcedure]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SpatialIndexProcedure]
AS
BEGIN
    --Nearest neighbor
    DECLARE @x Geography;
    SET @x = geography::STGeomFromText('LINESTRING(-122.360 47.656, -122.343 47.656 )', 4326);
    SELECT TOP(1) PERCENT a.NumericDT
    FROM SpatialTable a
    WHERE a.FloatDT = 0
    ORDER BY a.GeographyDT.STDistance(@x);

    --not working
    --SELECT a.numericdt 
    --FROM SpatialTable1 a
    --CROSS APPLY (SELECT TOP(10) b.numericdt FROM SpatialTable2 b ORDER BY a.geometrydt.STDistance(b.geometrydt)) 
    --ORDER BY a.id

    --Spatial join
    SELECT COUNT(*) FROM SpatialTable a, SpatialTable b
    WHERE b.GeometryDT.STIntersects(a.GeometryDT) = 1
    GROUP BY b.ID

    --Spatial Aggregates
    SELECT geometry::UnionAggregate(GeometryDT) FROM SpatialTable

    --DMV changes
    select * from sys.spatial_index_tessellations
    select * from sys.spatial_indexes
END

GO
/****** Object:  StoredProcedure [dbo].[TestRethrow1]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- testing TRY-CATCH-THROW
CREATE PROCEDURE [dbo].[TestRethrow1]
AS
BEGIN TRY
    INSERT dbo.TestRethrow (ID) VALUES (1) ; 
    INSERT dbo.TestRethrow (ID) VALUES (1) ; -- Causes error 2627 to be thrown. 
    PRINT '1'; 
END TRY 
BEGIN CATCH 
    PRINT '2'; 
    THROW; 
    PRINT '3'; 
END CATCH
PRINT '4';


GO
/****** Object:  StoredProcedure [dbo].[TestRethrow2]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- testing nested TRY-CATCH-THROW
CREATE PROCEDURE [dbo].[TestRethrow2]
AS
BEGIN TRY 
    BEGIN TRY 
        INSERT dbo.TestRethrow (ID) VALUES (2) ; 
        INSERT dbo.TestRethrow (ID) VALUES (2) ; -- Causes error 2627 to be thrown. 
        PRINT '1'; 
    END TRY 
    BEGIN CATCH 
        PRINT '2'; 
        THROW; 
        PRINT '3'; 
    END CATCH 
END TRY 
BEGIN CATCH 
    PRINT '4'; 
    THROW; 
    PRINT '5'; 
END CATCH 
PRINT '6';

GO
/****** Object:  StoredProcedure [dbo].[TestThrow1]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- testing THROW syntax
CREATE PROCEDURE [dbo].[TestThrow1]
AS
DECLARE @Message NVARCHAR(2048), @Number INT = 50001, @State BIT = 1; 
SET @Message = FORMATMESSAGE(@Number); 
THROW @Number, @Message, @State;


GO
/****** Object:  StoredProcedure [dbo].[TestThrow2]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- testing new syntax of FORMATMESSAGE
CREATE PROCEDURE [dbo].[TestThrow2]
AS
DECLARE @CustomerName NVARCHAR(25) = 'Bob';
DECLARE @Message NVARCHAR(2048) = FORMATMESSAGE('The customer %s was not found.', @CustomerName); 
THROW 50000, @Message, 1;


GO
/****** Object:  PlanGuide SmoBaselineVerification_PlanGuide    $(ScriptDate) ******/
EXEC sp_create_plan_guide @name = N'[SmoBaselineVerification_PlanGuide]', @stmt = N'SELECT * FROM sys.tables', @type = N'SQL', @module_or_batch = N'SELECT * FROM sys.tables', @hints = N'OPTION ( RECOMPILE )'
GO
/****** Object:  DdlTrigger [SmoBaselineVerification_DatabaseDdlTrigger]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--========================
--= DATABASE DDL TRIGGER =
--========================

CREATE TRIGGER [SmoBaselineVerification_DatabaseDdlTrigger]
ON DATABASE
FOR DROP_TABLE
AS
   PRINT 'This is a test trigger for the SMO Baseline Verification tests'
GO
DISABLE TRIGGER [SmoBaselineVerification_DatabaseDdlTrigger] ON DATABASE
GO
/****** Object:  DdlTrigger [Trigger_1]    $(ScriptDate) ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE TRIGGER [Trigger_1] 
ON DATABASE 
FOR DROP_SYNONYM
AS 
   RAISERROR ('You must disable Trigger "Trigger_1" to drop synonyms!',10, 1)
   ROLLBACK
GO
DISABLE TRIGGER [Trigger_1] ON DATABASE
GO
ENABLE TRIGGER [SmoBaselineVerification_DatabaseDdlTrigger] ON DATABASE
GO
ENABLE TRIGGER [Trigger_1] ON DATABASE
GO
EXEC sys.sp_addextendedproperty @name=N'sys_information_type_id', @value=N'843f7acd-776a-438d-890c-79c3f2a520d8' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'SmoBaselineVerification_DataClassifiedTable', @level2type=N'COLUMN',@level2name=N'SmoBaselineVerification_DataClassifiedColumn'
GO
EXEC sys.sp_addextendedproperty @name=N'sys_information_type_name', @value=N'Financial' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'SmoBaselineVerification_DataClassifiedTable', @level2type=N'COLUMN',@level2name=N'SmoBaselineVerification_DataClassifiedColumn'
GO
EXEC sys.sp_addextendedproperty @name=N'sys_sensitivity_label_id', @value=N'643f7acd-776a-438d-890c-79c3f2a520d6' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'SmoBaselineVerification_DataClassifiedTable', @level2type=N'COLUMN',@level2name=N'SmoBaselineVerification_DataClassifiedColumn'
GO
EXEC sys.sp_addextendedproperty @name=N'sys_sensitivity_label_name', @value=N'Highly Confidential' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'SmoBaselineVerification_DataClassifiedTable', @level2type=N'COLUMN',@level2name=N'SmoBaselineVerification_DataClassifiedColumn'
GO
EXEC sys.sp_addextendedproperty @name=N'prop_ex', @value=N'column_1' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Table_1', @level2type=N'COLUMN',@level2name=N'column_1'
GO
EXEC sys.sp_addextendedproperty @name=N'prop_ex', @value=N'Table_1' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Table_1'
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
GO
/****** Object:  Index [SpatialIndex1]    $(ScriptDate) ******/
CREATE SPATIAL INDEX [SpatialIndex1] ON [dbo].[KatmaiDataTypes]
(
	[geoColumn]
)USING  GEOMETRY_GRID 
WITH (BOUNDING_BOX =(12, 16, 500, 200), GRIDS =(LEVEL_1 = MEDIUM,LEVEL_2 = LOW,LEVEL_3 = MEDIUM,LEVEL_4 = HIGH), 
CELLS_PER_OBJECT = 16, PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
GO
/****** Object:  Index [idxGeom]    $(ScriptDate) ******/
CREATE SPATIAL INDEX [idxGeom] ON [dbo].[SpatialTable]
(
	[GeometryDT]
)USING  GEOMETRY_AUTO_GRID 
WITH (BOUNDING_BOX =(0, 0, 500, 500), 
CELLS_PER_OBJECT = 16, PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
GO
/****** Object:  Index [idxGeom2]    $(ScriptDate) ******/
CREATE SPATIAL INDEX [idxGeom2] ON [dbo].[SpatialTable]
(
	[GeometryDT]
)USING  GEOMETRY_GRID 
WITH (BOUNDING_BOX =(0, 0, 500, 500), GRIDS =(LEVEL_1 = LOW,LEVEL_2 = LOW,LEVEL_3 = MEDIUM,LEVEL_4 = HIGH), 
CELLS_PER_OBJECT = 16, PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
USE [master]
GO
ALTER DATABASE [$(BracketEscapedDatabaseName)] SET  READ_WRITE 
GO
